/*
 * To change this license header, choose License Headers in Project Properties.
 * To change this template file, choose Tools | Templates
 * and open the template in the editor.
 */
package ui;

import java.awt.*;
import java.sql.ResultSet;
import java.sql.SQLException;
import java.awt.event.MouseEvent;

import java.util.ArrayList;

import javax.swing.JComponent;
import javax.swing.JScrollPane;
import javax.swing.JTable;
import javax.swing.JViewport;
import javax.swing.ListSelectionModel;
import javax.swing.table.DefaultTableCellRenderer;
import javax.swing.table.DefaultTableModel;
import javax.swing.table.TableRowSorter;

import fc.AfficherListeEtudesListener;
import fc.DialogueBD;
import fc.Utilisateur;

/**
 *
 * @author emmaa
 */
public class AffichageListeEtude extends javax.swing.JPanel {

    /**
     * Creates new form AffichageListeEtude
     */
     // L'attribut longueur correspond à la longueur de l'écran
    protected int largeur;
    //L'attribut longueur1 correspond à la longueur du panneau Ouest de la fenêtre 
    protected int largeur1;
    // L'attribut hauteur correspond à la hauteur de l'écran
    protected int hauteur;
    //L'attribut hauteur1 correspond à la hauteur du panneau Ouest 
    protected int hauteur1;
    //L'attribut hauteur2 correspond à la hauteur du panneau Nord
    protected int hauteur2;
    //L'attribut largeurCentré correspond à 1/4 de largeur - largeur1
    protected int largeurCentree;
    //L'attribut largeurBouton correspond à la largeur des boutons d'ajout pour consultation, anesthésie, examen, prescription et radiologie
    protected int largeurBouton;
    //L'attribut hauteurInfo correspond à la hauteur du panneau info
    protected int hauteurInfo;
    //L'attribut hauteurCentral correspond à la hauteur du panneau central
    protected int hauteurCentral;

    public DialogueBD dialogueBD;
    public Utilisateur utilisateur;
    private javax.swing.JTable tableEtude;
    private AffichageListeEtude scrollPaneTable;
    private ArrayList<AfficherListeEtudesListener> etudeSelectioneListenerList = new ArrayList<>();
    
    /**
     * @param dialogueBD
     * @param utilisateur
     */
    public AffichageListeEtude(DialogueBD dialogueBD, Utilisateur utilisateur) {
         //On récupère la taille de l'écran
        Dimension tailleMoniteur = Toolkit.getDefaultToolkit().getScreenSize();
        //On stocke la largeur de l'écran dans la variable largeur
        largeur = tailleMoniteur.width;
        //On stocke la hauteur de l'écran dans la variable hauteur
        hauteur = tailleMoniteur.height;
        //L'attribut largeur1 correspond à 1/5 de la largeur de l'écran
        largeur1 = largeur / 5;
        //L'attribut largeurCentré correspond à 1/4 de (largeur-largeur1)
        largeurCentree = (largeur - largeur1) / 4;
        //L'attribut hauteur1 correspond à 4/5 de la hauteur de l'écran
        hauteur1 = hauteur - hauteur2;
        //L'attribut hauteur 2 correspond à 1/5 de la hauteur de l'écran
        hauteur2 = hauteur / 5;
        //L'attribut largeurBouton correspond à 1/8 de la largeur de largeurCentree
        largeurBouton = largeurCentree / 8;
        hauteurInfo = 1;
        
        //On stocke les données de l'utilisateur et la connexion à la BD
        this.dialogueBD = dialogueBD;
        this.utilisateur = utilisateur;
        initComponents(dialogueBD.getEtude());
    }

    /**
     * This method is called from within the constructor to initialize the form.
     * WARNING: Do NOT modify this code. The content of this method is always
     * regenerated by the Form Editor.
     */
    @SuppressWarnings("unchecked")
    // <editor-fold defaultstate="collapsed" desc="Generated Code">//GEN-BEGIN:initComponents
    private void initComponents(ResultSet resultSetEtude) {

        PanneauNord = new javax.swing.JPanel();
        ListeEtudeClinique = new javax.swing.JLabel();
        BoutonCreerEtude = new javax.swing.JButton();
        PanneauSud = new javax.swing.JPanel();
        PanneauCentre = new javax.swing.JPanel();
        jScrollPane1 = new javax.swing.JScrollPane();
        DefaultTableModel modelTable = new DefaultTableModel();

        setBackground(new java.awt.Color(255, 255, 255));
        setPreferredSize(new Dimension(largeur-largeur1,hauteur1));
        setLayout(new java.awt.BorderLayout());

        PanneauNord.setBackground(new java.awt.Color(255, 255, 255));
        PanneauNord.setPreferredSize(new java.awt.Dimension(750, 80));

        ListeEtudeClinique.setFont(new java.awt.Font("Times New Roman", 1, 20)); // NOI18N
        ListeEtudeClinique.setForeground(new java.awt.Color(4, 66, 114));
        //On vérifie la langue pour la traduire dans la langue souhaitée
        if(utilisateur.getLangue().equals("English")){
            ListeEtudeClinique.setText("List of clinical studies");
        }
        else{
            ListeEtudeClinique.setText("Liste des études cliniques");
        }

        BoutonCreerEtude.setBackground(new java.awt.Color(255, 255, 255));
        BoutonCreerEtude.setFont(new java.awt.Font("Times New Roman", 0, 16)); // NOI18N
        BoutonCreerEtude.setForeground(new java.awt.Color(4, 66, 114));
        //On vérifie la langue pour la traduire dans la langue souhaitée
        if(utilisateur.getLangue().equals("English")){
            BoutonCreerEtude.setText("Create a study");
        }
        else{
            BoutonCreerEtude.setText("Créer une étude");
        }
        BoutonCreerEtude.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                BoutonCreerEtudeActionPerformed(evt);
            }
        });

        javax.swing.GroupLayout PanneauNordLayout = new javax.swing.GroupLayout(PanneauNord);
        PanneauNord.setLayout(PanneauNordLayout);
        PanneauNordLayout.setHorizontalGroup(
            PanneauNordLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(PanneauNordLayout.createSequentialGroup()
                .addGap(20, 20, 20)
                .addGroup(PanneauNordLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                    .addComponent(BoutonCreerEtude)
                    .addComponent(ListeEtudeClinique))
                .addContainerGap(517, Short.MAX_VALUE))
        );
        PanneauNordLayout.setVerticalGroup(
            PanneauNordLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(PanneauNordLayout.createSequentialGroup()
                .addContainerGap()
                .addComponent(ListeEtudeClinique)
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                .addComponent(BoutonCreerEtude)
                .addContainerGap(12, Short.MAX_VALUE))
        );

        add(PanneauNord, java.awt.BorderLayout.PAGE_START);

        PanneauSud.setBackground(new java.awt.Color(255, 255, 255));

        javax.swing.GroupLayout PanneauSudLayout = new javax.swing.GroupLayout(PanneauSud);
        PanneauSud.setLayout(PanneauSudLayout);
        PanneauSudLayout.setHorizontalGroup(
            PanneauSudLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGap(0, 750, Short.MAX_VALUE)
        );
        PanneauSudLayout.setVerticalGroup(
            PanneauSudLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGap(0, 100, Short.MAX_VALUE)
        );

        add(PanneauSud, java.awt.BorderLayout.PAGE_END);

        PanneauCentre.setBackground(new java.awt.Color(255, 255, 255));
        PanneauCentre.setLayout(new java.awt.BorderLayout());

        //On ajoute les colonnes de la table
        modelTable.addColumn("ID de l'étude");
        modelTable.addColumn("nom");
        modelTable.addColumn("ID Personnel Médical responsable");
        modelTable.addColumn("Type de Recherche");

        // Ajout des études dans le modèle de table
        try {
            while (resultSetEtude.next()) {
                // On ajoute les informations des études qui correspondent à la recherche dans le modèle de table
                modelTable.addRow(new Object[]{resultSetEtude.getString("idEtude"),
                resultSetEtude.getString("nom").trim(),
                resultSetEtude.getString("IDPERSONNELMEDICAL").trim(),
                resultSetEtude.getString("TYPERECHERCHE")});
            }
        } catch (SQLException e) {
            throw new RuntimeException(e);
        }

         //On crée une JTable avec le modèle de table
        tableEtude = new JTable(modelTable);

        // Création d'un TableRowSorter et liaison avec la table
        TableRowSorter<DefaultTableModel> sorter = new TableRowSorter<>(modelTable);
        tableEtude.setRowSorter(sorter);

        // Tri des lignes en fonction de la première colonne
        sorter.setSortable(1, true); // Permet de trier la colonne 0
        sorter.toggleSortOrder(0);

        tableEtude.addMouseListener(new java.awt.event.MouseAdapter() {
            public void mouseClicked(java.awt.event.MouseEvent evt) {
                tableEtudeMouseClicked((MouseEvent) evt);
            }
        });

        //On définit la taille de la police de la JTable
        tableEtude.setFont(new java.awt.Font("Times New Roman", 0, 24));
        tableEtude.setRowHeight(30);
        tableEtude.getTableHeader().setPreferredSize(new Dimension(100, 50));
        tableEtude.getTableHeader().setFont(new java.awt.Font("Times New Roman", 1, 24));

        // On change la couleur de fond de l'entête de la JTable
        tableEtude.getTableHeader().setDefaultRenderer(new DefaultTableCellRenderer() {
            @Override
            public Component getTableCellRendererComponent(JTable table, Object value, boolean isSelected, boolean hasFocus, int row, int column) {
                super.getTableCellRendererComponent(table, value, isSelected, hasFocus, row, column);
                setBackground(new Color(4, 66, 114));
                setForeground(Color.WHITE);
                return this;
            }
        });
        // On empêche l'utilisateur de modifier les données de la JTable
        tableEtude.setDefaultEditor(Object.class, null);
        // On définit un modèle de sélection de la JTable à une seule étude
        tableEtude.setSelectionMode(ListSelectionModel.SINGLE_SELECTION);

        //On ajoute la JTable dans un JScrollPane
        jScrollPane1 = new JScrollPane(tableEtude);
        jScrollPane1.setViewportView(tableEtude);
        PanneauCentre.add(jScrollPane1);

        // On change la couleur de fond de la JTable et du JScrollPane
        tableEtude.setBackground(new Color(236, 242, 254));
        this.setBackground(new Color(236, 242, 254));
        JViewport viewport = jScrollPane1.getViewport();
        if (viewport != null && viewport.getView() instanceof JComponent) {
            ((JComponent) viewport.getView()).setBackground(new Color(236, 242, 254));
        }

        // On change la couleur de fond des lignes de la JTable
        tableEtude.setDefaultRenderer(Object.class, new DefaultTableCellRenderer() {
            @Override
            public Component getTableCellRendererComponent(JTable table, Object value, boolean isSelected, boolean hasFocus, int row, int column) {
                Component c = super.getTableCellRendererComponent(table, value, isSelected, hasFocus, row, column);
                if (row % 2 == 0) {
                    c.setBackground(new java.awt.Color(236, 242, 254));
                } else {
                    c.setBackground(new java.awt.Color(244, 247, 254));
                }
                if (isSelected) {
                    // En gris si la ligne est sélectionnée.
                    c.setBackground(new java.awt.Color(50, 115, 244));
                }
                return c;
            }
        });

        this.add(tableEtude);
    }

    private void BoutonCreerEtudeActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_BoutonCreerEtudeActionPerformed
        //On vérifie si l'utilisateur est un ARC
        if(utilisateur.isArc()){
            //On ouvre le formulaire pour créer une étude 
            AjouterEtude ajoutEtude = new AjouterEtude(dialogueBD,utilisateur);
            ajoutEtude.setVisible(true);
        }
        else{
            // On affiche un message de confirmation
            javax.swing.JOptionPane.showMessageDialog(null, "Vous n'avez pas les droits");
        }
        
    }//GEN-LAST:event_BoutonCreerEtudeActionPerformed

    private void tableEtudeMouseClicked(MouseEvent evt) {
        if (((java.awt.event.MouseEvent) evt).getClickCount() == 2) {    // Si l'utilisateur double clique sur une ligne de la JTable
            int selectedRow = tableEtude.getSelectedRow(); // On récupère la ligne sélectionnée
            if (selectedRow != -1) {        // Si une ligne est bien sélectionnée
                // On récupère l'ID de l'étude sélectionné
                Object idEtude = tableEtude.getValueAt(selectedRow, 0);
                System.out.println("Selected: " + idEtude);

                // On prévient tous les listeners que l'utilisateur a sélectionné une étude
                for (AfficherListeEtudesListener afficherListeEtudesListener : etudeSelectioneListenerList) {
                    afficherListeEtudesListener.etudeSelected((String) idEtude);
                }
            }
        }
    }
    
    public void addEtudeSelectedListener(AfficherListeEtudesListener listener) {
        etudeSelectioneListenerList.add(listener);
    }

    // Variables declaration - do not modify//GEN-BEGIN:variables
    private javax.swing.JButton BoutonCreerEtude;
    private javax.swing.JLabel ListeEtudeClinique;
    private javax.swing.JPanel PanneauCentre;
    private javax.swing.JPanel PanneauNord;
    private javax.swing.JPanel PanneauSud;
    private javax.swing.JScrollPane jScrollPane1;
    // End of variables declaration//GEN-END:variables
}
